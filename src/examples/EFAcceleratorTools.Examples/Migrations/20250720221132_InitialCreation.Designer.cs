// <auto-generated />
using System;
using EFAcceleratorTools.Examples.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFAcceleratorTools.Examples.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250720221132_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_COURSE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DT_CREATION");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_INSTRUCTOR");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TX_TITLE");

                    b.HasKey("Id")
                        .HasName("SQ_COURSE");

                    b.HasIndex("InstructorId");

                    b.ToTable("TB_COURSE", (string)null);
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_LESSON");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_CREATION");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time")
                        .HasColumnName("DT_DURATION");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_MODULE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TX_TITLE");

                    b.HasKey("Id")
                        .HasName("SQ_LESSON");

                    b.HasIndex("ModuleId");

                    b.ToTable("TB_LESSON", (string)null);
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_MODULE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_COURSE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_CREATION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TX_NAME");

                    b.HasKey("Id")
                        .HasName("SQ_MODULE");

                    b.HasIndex("CourseId");

                    b.ToTable("TB_MODULE", (string)null);
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Instructor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_INSTRUCTOR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_CREATION");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TX_FULL_NAME");

                    b.HasKey("Id")
                        .HasName("SQ_INSTRUCTOR");

                    b.ToTable("TB_INSTRUCTOR", (string)null);
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_PROFILE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TX_BIO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_CREATION");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint")
                        .HasColumnName("SQ_INSTRUCTOR");

                    b.Property<string>("LinkedInUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TX_LINKEDIN");

                    b.HasKey("Id")
                        .HasName("SQ_PROFILE");

                    b.HasIndex("InstructorId")
                        .IsUnique();

                    b.ToTable("TB_PROFILE", (string)null);
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Course", b =>
                {
                    b.HasOne("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Lesson", b =>
                {
                    b.HasOne("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Module", null)
                        .WithMany("Lessons")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Module", b =>
                {
                    b.HasOne("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Course", null)
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Profile", b =>
                {
                    b.HasOne("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Instructor", null)
                        .WithOne("Profile")
                        .HasForeignKey("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Profile", "InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Course", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Courses.Module", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("EFAcceleratorTools.Examples.Domain.Aggregates.Instructors.Instructor", b =>
                {
                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
